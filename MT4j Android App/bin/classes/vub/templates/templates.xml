<templates>
<template name="if:then:else:">
    <edu.vub.ast.FunctionCall>
        <name>if:then:else:</name>
        <args>
            <edu.vub.ast.PlaceHolder hint="condition" />
            <edu.vub.ast.PlaceHolder hint="consequent" type="block"/>
            <edu.vub.ast.PlaceHolder hint="alternative" type="block" />
        </args>
    </edu.vub.ast.FunctionCall>
</template>
    <function>
        <title>
 If:Then:Else
        </title>

        <name>
 if:
        </name>
        <name>
 then:
        </name>
        <name>
 else:
        </name>

        <content>
 predicate
        </content>
        <content>
consequent
        </content>
        <content>
alternative
        </content>
    </function>

    <function>
        <title>
>When:Discovered
        </title>

        <name>
when:
        </name>
        <name>
discovered:
        </name>

        <content>
predicate
        </content>
        <content>
discovered
        </content>
    </function>
    <function>
        <title>
Whenever:Discovered
        </title>

        <name>
whenever:
        </name>
        <name>
discovered:
        </name>

        <content>
predicate
<!--  content aanpassen naar -->
<!-- expressie, block, typetag -->
        </content>
        <content>
content
        </content>
    </function>
    <function>
        <title>
While:Do
        </title>

        <name>
while:
        </name>
        <name>
do:
        </name>

        <content>
predicate
        </content>
        <content>
content
        </content>
    </function>
    <function>
        <title>
When:Becomes
        </title>

        <name>
when:
        </name>
        <name>
becomes:
        </name>

        <content>
predicate
        </content>
        <content>
content
        </content>
    </function>
    <function>
        <title>
Whenever:Disconnected
        </title>

        <name>
whenever:
        </name>
        <name>
disconnected:
        </name>

        <content>
predicate
        </content>
        <content>
content
        </content>
    </function>
    <function>
        <title>
Whenever:Reconnected
        </title>

        <name>
whenever:
        </name>
        <name>
reconnected:
        </name>

        <content>
predicate
        </content>
        <content>
content
        </content>
    </function>
    <function>
        <title>
PrintLine
        </title>

        <name>
system.println
        </name>

        <content>
content
        </content>
    </function>

    <operation>
        <title>
+
        </title>
    </operation>
    <operation>
        <title>
-
        </title>
    </operation>
    <operation>
        <title>
*
        </title>
    </operation>
    <operation>
        <title>
/
        </title>
    </operation>

</templates>
