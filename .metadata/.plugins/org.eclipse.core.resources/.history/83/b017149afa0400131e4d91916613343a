<?xml version="1.0" encoding="UTF-8"?>
<templates>
<template name="if:then:else:">
    <vub.ast.Function>
        <args>
            <arg name="if">
                <vub.ast.Placeholder name="condition"/>
            </arg>
            <arg name="then">
                <vub.ast.Placeholder name="consequent"/>
            </arg>
            <arg name="else">
                <vub.ast.Placeholder name="alternative"/>
            </arg>
        </args>
    </vub.ast.Function>
</template>
<template name="when:discovered:">
    <vub.ast.Function>
        <args>
            <arg name="when">
                <vub.ast.Placeholder name="predicate" />                
            </arg>
            <arg name="discovered">
                <vub.ast.Placeholder name="block" />                
            </arg>            
        </args>
    </vub.ast.Function>
</template>
<template name="while:do:">
    <vub.ast.Function>
        <args>
            <arg name="while">
                <vub.ast.Placeholder name="predicate" />                
            </arg>
            <arg name="do">
                <vub.ast.Placeholder name="block"/>                
            </arg>
            
        </args>
    </vub.ast.Function>
</template>
<template name="when:becomes:">
    <vub.ast.Function>
        <args>
            <arg name="when">
                <vub.ast.Placeholder name="predicate" />                
            </arg>
            <arg name="becomes">
                <vub.ast.Placeholder name="block" />                
            </arg>            
        </args>
    </vub.ast.Function>
</template>
<template name="whenever:disconnected:">
    <vub.ast.Function>
        <args>
            <arg name="whenever">
                <vub.ast.Placeholder name="predicate" />                
            </arg>
            <arg name="disconected">
                <vub.ast.Placeholder name="block" />
            </arg>            
        </args>
    </vub.ast.Function>
</template>
<template name="whenever:reconnected:">
    <vub.ast.Function>
        <args>
            <arg name="whenever">
                <vub.ast.Placeholder name="predicate" />                
            </arg>
            <arg name="reconnected">
                <vub.ast.Placeholder name="block" />                
            </arg>            
        </args>
    </vub.ast.Function>
</template>
<template name="PrintLine">
    <vub.ast.Function>
        <args>
            <arg name="system.println">
                <vub.ast.Placeholder name="text" />                
            </arg>            
        </args>
    </vub.ast.Function>
</template>
<template name="addition">
    <vub.ast.Operation>
        <operator>+</operator>
        <args>
            <arg name="arg1">
                <vub.ast.Placeholder name="arg1"/>                
            </arg>
            <arg name="arg2">
                <vub.ast.Placeholder name="arg2"/>                
            </arg>           
        </args>
    </vub.ast.Operation>
</template>
<template name="subtraction">
    <vub.ast.Operation>
        <operator>-</operator>
        <args>
            <arg name="arg1">
                <vub.ast.Placeholder name="arg1"/>                
            </arg>
            <arg name="arg2">
                <vub.ast.Placeholder name="arg2"/>                
            </arg>           
        </args>
    </vub.ast.Operation>
</template>
<template name="multiplication">
    <vub.ast.Operation>
        <operator>*</operator>
        <args>
            <arg name="arg1">
                <vub.ast.Placeholder name="arg1"/>                
            </arg>
            <arg name="arg2">
                <vub.ast.Placeholder name="arg2"/>                
            </arg>           
        </args>
    </vub.ast.Operation>
</template>
<template name="devision">
    <vub.ast.Operation>
        <operator>/</operator>
        <args>
            <arg name="arg1">
                <vub.ast.Placeholder name="arg1"/>                
            </arg>
            <arg name="arg2">
                <vub.ast.Placeholder name="arg2"/>                
            </arg>           
        </args>
    </vub.ast.Operation>
</template>
<template name="devision">
    <vub.ast.Operation>
        <operator>/</operator>
        <args>
            <arg name="arg1">
                <vub.ast.Placeholder name="arg1"/>                
            </arg>
            <arg name="arg2">
                <vub.ast.Placeholder name="arg2"/>                
            </arg>           
        </args>
    </vub.ast.Operation>
</template>
 <template name="value">
    <vub.ast.Value>
        <name>value</name>
        <args>
            "empty"
        </args>
    </vub.ast.Value>
</template>
<!--  <template name="definition">
    <vub.ast.Definition>
    </vub.ast.Definition>
</template>-->
<template name="functionDefinition">
    <vub.ast.FunctionDefinition>
        <name>function</name>
        <args>
            0
        </args>
    </vub.ast.FunctionDefinition>
</template>
<!--<template type="definition" name="tableDefinition">
    <edu.vub.ast.TableDefinition>
        <name>table</name>
        <args>
        </args>
    </edu.vub.ast.TableDefinition>
</template>
<template type="definition" name="begin">
    <edu.vub.ast.Begin>
        <name>begin</name>
        <args>
            <edu.vub.ast.Placeholder />
        </args>
    </edu.vub.ast.Begin>
</template>
<template type="definition" name="block">
    <edu.vub.ast.block>
        <name>block</name>
        <args>
        </args>
    </edu.vub.ast.Block>
</template>
-->
</templates>
