import java.io.File;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;

public class templateReader {

public static void main(String args[]) {
try {

File templates = new File("src/templates.xml");
DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
Document doc = dBuilder.parse(templates);
doc.getDocumentElement().normalize();

System.out.println("root of xml file " + doc.getDocumentElement().getNodeName());
NodeList nodes = doc.getElementsByTagName("function");
NodeList operations = doc.getElementsByTagName("operation");
System.out.println("==========================");

for (int i = 0; i < nodes.getLength(); i++) {
Node node = nodes.item(i);

if (node.getNodeType() == Node.ELEMENT_NODE) {
Element element = (Element) node;

System.out.println("Function Title: " + getValue("title", element));
System.out.println("Function Name: " + getValue("name", element));
System.out.println("Function Name: " + getValue2("name", element));
System.out.println("Function content: " + getValue("content", element));
}
}
} catch (Exception ex) {
ex.printStackTrace();
}
}

private static String getValue2(String tag, Element element) {
int length = element.getElementsByTagName(tag).getLength();
System.out.println(length);
NodeList nodes = element.getElementsByTagName(tag).item(length).getChildNodes();
Node node = (Node) nodes.item(0);
return node.getNodeValue();
}

private static String getValue(String tag, Element element) {
NodeList nodes = element.getElementsByTagName(tag).item(0).getChildNodes();
Node node = (Node) nodes.item(0);
return node.getNodeValue();
}
}
